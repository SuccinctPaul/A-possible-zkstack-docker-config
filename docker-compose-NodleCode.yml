version: '3.2'

services:
  postgres-explorer:
    image: "postgres:14"
    volumes:
      - postgres-explorer:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=block-explorer
    restart: unless-stopped
  explorer-app:
    image: "matterlabs/block-explorer-app"
    ports:
      - '3010:3010'
    depends_on:
      explorer-api:
        condition: service_started
    volumes:
      - ./config/explorer-app.config.js:/usr/src/app/packages/app/dist/config.js
    restart: unless-stopped
  explorer-worker:
    image: "matterlabs/block-explorer-worker"
    environment:
      - PORT=3001
      - LOG_LEVEL=verbose
      - NODE_ENV=development
      - DATABASE_HOST=postgres-explorer
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=block-explorer
      - BLOCKCHAIN_RPC_URL=http://zkstack-apis:3051
      - DATA_FETCHER_URL=http://explorer-data-fetcher:3040
      - BATCHES_PROCESSING_POLLING_INTERVAL=1000
    depends_on:
      zkstack-apis:
        condition: service_started
        restart: true
    restart: unless-stopped
  explorer-api:
    image: "matterlabs/block-explorer-api"
    environment:
      - PORT=3020
      - METRICS_PORT=3005
      - LOG_LEVEL=verbose
      - NODE_ENV=development
      - CONTRACT_VERIFICATION_API_URL=http://zkstack-apis:3070
      - DATABASE_URL=postgres://postgres:postgres@postgres-explorer:5432/block-explorer
    ports:
      - '3020:3020'
    depends_on:
      explorer-worker:
        condition: service_started
        restart: true
    restart: unless-stopped
  explorer-data-fetcher:
    image: "matterlabs/block-explorer-data-fetcher"
    environment:
      - PORT=3040
      - LOG_LEVEL=verbose
      - NODE_ENV=development
      - BLOCKCHAIN_RPC_URL=http://zkstack-apis:3050/
    ports:
      - '3040:3040'
    restart: unless-stopped

  postgres-zksync:
    image: postgres:14
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: notsecurepassword
      POSTGRES_HOST_AUTH_METHOD: trust

  zkstack-core:
    container_name: zkstack-core
    image: douglasacost/zk-testnet-nodle:latest
    command:
      [
        "--components",
        "tree,eth,state_keeper,housekeeper,proof_data_handler"
      ]
    depends_on:
      postgres-zksync:
        condition: service_healthy
      zk-postgres-setup:
        condition: service_completed_successfully
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3071/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    env_file:
      - ./env/nodle-l2-testnet.env
    environment:
      DATABASE_URL: postgres://postgres@postgres-zksync/zksync_local
      DATABASE_PROVER_URL: postgres://postgres:@postgres-zksync/prover_local
    ports:
      # assumes default ports in .env
      #- "3312:3312" # prometheus metrics # we need a separate metrics port for each component
      - "3320:3320" # proof_data_handler api
    volumes:
      - zksync-data:/zk-sync

  zkstack-apis:
    image: douglasacost/zk-testnet-nodle:latest
    depends_on:
      zkstack-core:
        condition: service_healthy
      postgres-zksync:
        condition: service_healthy
      zk-postgres-setup:
        condition: service_completed_successfully
    restart: always
    command: [ "--components", "http_api,ws_api" ]
    env_file:
      - ./env/nodle-l2-testnet.env
    environment:
      FRI_PROVER_GATEWAY_API_URL: http://zkstack-core:3320
      DATABASE_URL: postgres://postgres:@postgres-zksync/zksync_local
    ports:
      # assumes default ports in .env
      - "3071:3071" # health
      - "3312:3312" # prometheus metrics # we need a separate metrics port for each component
      - "3050:3050" # http_api
      - "3051:3051" # ws_api

  zk-postgres-setup:
    build:
      context: .
      dockerfile: docker/Dockerfile.zk-postgres-setup
    depends_on:
      postgres-zksync:
        condition: service_healthy
    restart: on-failure
    env_file:
      - ./env/nodle-l2-testnet.env
    environment:
      DATABASE_URL: postgres://postgres:@postgres-zksync/zksync_local
      DATABASE_PROVER_URL: postgres://postgres:@postgres-zksync/prover_local
    command: [ "db", "setup" ]



volumes:
  zksync-data:
  postgres-explorer:
  postgres-zksync:

